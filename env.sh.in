#!/usr/bin/env bash

# This script sets environment variables and aliases to
# allow the user testing of a tiscamera build without the need
# of installation

#
# if you need this script bash free
# - change the shebang to sh
# - remove auto-completion at the bottom of the script
#

BASE="@IC4SRC_BINARY_DIR@"

if [ -z "$BASE" ]
then
    echo "Unable to find root dir of project."
    echo "Please set it manually."
    exit 1
fi

if [ -z "${GST_PLUGIN_PATH}" ]; then
    export GST_PLUGIN_PATH="${BASE}/lib"
else
    export GST_PLUGIN_PATH="${BASE}/lib/:${GST_PLUGIN_PATH}"
fi

if [ -z "${GI_TYPELIB_PATH}" ]; then
    export GI_TYPELIB_PATH="${BASE}/libs/tcam-property/src/"
else
    export GI_TYPELIB_PATH="${BASE}/libs/tcam-property/src/:${GI_TYPELIB_PATH}"
fi

# LD_RUN_PATH is used by ld during linking
# installed variables will not use this
if [ -z "${LD_RUN_PATH}" ]; then

    export LD_RUN_PATH="${BASE}/lib"
else
    export LD_RUN_PATH="${BASE}/lib:${LD_RUN_PATH}"
fi

# LD_LIBRARY_PATH is used at runtime by ldd to
# find libraries that are linked to your executable
if [ -z "${LD_LIBRARY_PATH}" ]; then
    export LD_LIBRARY_PATH="${BASE}/lib:"
else
    export LD_LIBRARY_PATH="${BASE}/lib:${LD_LIBRARY_PATH}"
fi

# LIBRARY_PATH is a list of directories containing static and
# shared libraries and is used before compilation
if [ -z "${LIBRARY_PATH}" ]; then
    export LIBRARY_PATH="${BASE}/lib/"
else
    export LIBRARY_PATH="${BASE}/lib:${LIBRARY_PATH}"
fi
